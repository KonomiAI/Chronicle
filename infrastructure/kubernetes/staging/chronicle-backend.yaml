---
apiVersion: apps/v1
kind: Deployment
metadata:
  labels:
    app: chronicle-api
  name: chronicle-api
  namespace: staging
spec:
  selector:
    matchLabels:
      app: chronicle-api
      tier: backend
      track: stable
  replicas: 1
  template:
    metadata:
      labels:
        app: chronicle-api
        tier: backend
        track: stable
    spec:
      nodeSelector:
        cloud.google.com/gke-spot: 'true'
      containers:
        - name: chronicle-api
          image: gcr.io/konomi-ai/chronicle-api:latest
          imagePullPolicy: Always
          resources:
            requests:
              memory: '100Mi'
              cpu: '500m'
          ports:
            - containerPort: 3001
              name: http
          env:
            - name: MONGODB_USER
              valueFrom:
                secretKeyRef:
                  name: chronicle-staging-mongodb-user-secret
                  key: value
            - name: MONGODB_PASSWORD
              valueFrom:
                secretKeyRef:
                  name: chronicle-staging-mongodb-password-secret
                  key: value
            - name: DATABASE_URL
              valueFrom:
                secretKeyRef:
                  name: chronicle-staging-mongodb-url-secret
                  key: value
            - name: ACCESS_TOKEN_KEY
              valueFrom:
                secretKeyRef:
                  name: chronicle-staging-access-token-key
                  key: value
            - name: ACCESS_TOKEN_EXPIRY_KEY
              valueFrom:
                secretKeyRef:
                  name: chronicle-staging-access-token-expiry-key
                  key: value
      affinity:
        # Since the cluster uses spot nodes that can be shut down at any time, having at least
        # 2 replicas with antiAffinity is recommended for application resilency when a node shuts down
        podAntiAffinity:
          requiredDuringSchedulingIgnoredDuringExecution:
            - labelSelector:
                matchExpressions:
                  - key: 'app'
                    operator: In
                    values:
                      - chronicle-api
              topologyKey: 'kubernetes.io/hostname'
---
apiVersion: v1
kind: Service
metadata:
  name: chronicle-api
  namespace: staging
  labels:
    service: chronicle-api
spec:
  ports:
    - port: 80
      protocol: TCP
      targetPort: 3001
  selector:
    app: chronicle-api
    tier: backend
